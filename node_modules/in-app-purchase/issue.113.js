var iap = require('./');
var receipt = { data: { packageName: 'eu.guerrillatips.mobile', productId: 'eu.guerrillatips.app.12months.auto', purchaseTime: 1501004115302, purchaseState: 0, purchaseToken: 'elmajadphhiffmgnilakbngi.AO-J1OznTrRU6oUoCvQtuOZwHMjGgtK4krVfrgxoRM_wDUqZ7ZWxr5gp9EsXshfGqgiSJt1CgGc9dPQO2ctZnIBlc8quxIpxTP0QrFqYUMwzK8x2Q8ga3qNf17_fQSZQ-pSQNMGfk3Yb9GCFf3foUkKiJNli5Ohtpw', autoRenewing: true }, signature: 'hScPpBI3R+LJNW22YEFdvN9rqn2N9uOxFoe5tSVuslrqnfY7CkIZiTw8r03dyb8ckTdeuqmUj/6Rbi9dO8F0kb/IRRKkd3OW7wUDT4tHLSz7uiusnMG8rSQUWIzhY50ZXfKCCB51pOhlhsS68WZ1rUPFf2ju/j85RAUKCZTXihjdw814pkF2Qt0B9Eq3cB01cR+GE/iDmip935KriHQQnvVi09h7WfY/bajJbKi2LCiDrMJZVQoaP2JoOuOOrpkzgou8uyJp/zrjj2di9VXK637io62iF3FPYyzdJY+6luSrm6VW7YgFLVUPb59S7KqRDuXvVhel4Et4GR9j2SbzRw==' };

iap.config({
	verbose: true,
	googlePublicKeyStrLive: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuAtTwFrUIyhWbuM7P6ToytmJHKxqldNBIOD+NlyBn2IMZ+n0tV4giiK6y629p/1ZW8Y4l1bradEZGp6JsQkDJKj+j0GyFjwcvKUcsZ3lKnWHqxQfj3k+7+0m7EzAaNwQu4k4NmLt5mluCrAYq2v5wKUzxSwMaV3iqsNtGN1tKavxCZdwH9XoEeksYZqlO3yB9MmXtM+9DwTomtxv4rYojYvmL2U8ZdyJeN+Bp3W426BxetM4fssy1x9adwhVIcP3kehraa4SSQqFFX5Au7binLZ31dkpD7jCs3x09jYzFHKBApKa4TTpU5B66npJv3nfYfg4NdupbjEVuLsh0/R8hwIDAQAB'
});


var request = require('request');
var body = {};
body['grant_type'] = 'refresh_token';
body['client_id'] = '1018617056565-5b34bbk6muer5i2qrobkpnnoj5vct4ev.apps.googleusercontent.com';
body['client_secret'] = 'F41itQrw08RaYO4-ILdpylD7';
body['refresh_token'] = '1/6nmrHv2QTQcQYQMxIVm8E1I8m60cPr18APKsLa_yOfE';

var options = {
	method: 'POST',
	url: 'https://accounts.google.com/o/oauth2/token',
	form: body,
	json: true
};

request(options, function (error, res, body) {

	var accessToken = body.access_token;
	var url = 'https://www.googleapis.com/androidpublisher/v2/applications/{$PACKAGE_NAME}/purchases/subscriptions/{$PRODUCT_ID}/tokens/{$PURCHASE_TOKEN}?access_token={$ACCESS_TOKEN}';
	/*
	var _receipt = JSON.stringify({
		kind: 'androidpublisher#productPurchase',
		purchaseTimeMillis: receipt.data.purchaseTime,
		purchaseState: receipt.data.purchaseState,
		consumptionState: receipt.data.consumptionState || 1,
		developerPayload: receipt.data.developerPayload || '' 
	});
	*/
	var _receipt = receipt.data.purchaseToken;
	var api = url
		.replace('{$PACKAGE_NAME}', encodeURIComponent(receipt.data.packageName))
		.replace('{$PRODUCT_ID}', encodeURIComponent(receipt.data.productId))
		.replace('{$PURCHASE_TOKEN}', encodeURIComponent(_receipt))
		.replace('{$ACCESS_TOKEN}', encodeURIComponent(accessToken));

	console.log(api);

	request.get({
		url: api,
		json: true
	}, function (error, res, body) {
		console.log(JSON.stringify(body, null, 2));
	});

});

return;

iap.setup(function (err) {
	if (err) {
		console.error(err);
	}
	iap.validate(iap.GOOGLE, receipt, function (err, res) {
		if (err) {
			console.error('Error:', err);
		}
		if (iap.isValidated(res)) {
			console.info("OK");
		}
	});
});
